
https://m.php.cn/article/411567.html

列表属性

ul li{
	list-style-image:url(images/2.gif) ;  /*列表项前设置为图片*/
	margin-left:80px;  /*公有属性*/
}

另外还有一个简写属性叫做list-style，它的作用是：将上面的多个属性写在一个声明中。

我们来看一下list-style-image属性的效果：



HSLA 表示法

举例：

	background-color: hsla(240,50%,50%,0.4);

解释：

    H 色调，取值范围 0~360。0或360表示红色、120表示绿色、240表示蓝色。

    S 饱和度，取值范围 0%~100%。值越大，越鲜艳。

    L 亮度，取值范围 0%~100%。亮度最大时为白色，最小时为黑色。

    A 透明度，取值范围 0~1。

如果不知道 H 的值该设置多少，我们不妨来看一下色盘


font 字体属性

CSS中，有很多非布局样式（与布局无关），包括：字体、行高、颜色、大小、背景、边框、滚动、换行、装饰性属性（粗体、斜体、下划线）等。

这一段，我们先来讲一下字体属性。

css样式中，常见的字体属性有以下几种：

p{
	font-size: 50px; 		/*字体大小*/
	line-height: 30px;      /*行高*/
	font-family: 幼圆,黑体; 	/*字体类型：如果没有幼圆就显示黑体，没有黑体就显示默认*/
	font-style: italic ;		/*italic表示斜体，normal表示不倾斜*/
	font-weight: bold;	/*粗体*/
	font-variant: small-caps;  /*小写变大写*/
}

是否加粗属性以及上面这三个属性，我们可以连写：（是否加粗、字号 font-size、行高 line-height、字体 font-family）

格式：

	font: 加粗 字号/行高/ 字体

举例：

	font: 400 14px/24px "宋体";

PS：400是nomal，700是bold。

上面这几个属性可以连写，但是有一个要求，font属性连写至少要有字号和字体，否则连写是不生效的（相当于没有这一行代码）。

字体加粗属性

.div {
	font-weight: normal; /*正常*/
	font-weight: bold;  /*加粗*/
	font-weight: 100;
	font-weight: 200;
	font-weight: 900;
}

在设置字体是否加粗时，属性值既可以填写normal、bold这样的加粗字体，也可以直接填写 100至900 这样的数字。normal的值相当于400，bold的值相当于700。




行高

CSS中，所有的行，都有行高。盒子模型的padding，绝对不是直接作用在文字上的，而是作用在“行”上的。
上图中，我们设置行高为30px，30px * 5 = 150px，通过查看审查元素，这个p标签的高度果然为150px。而且我们发现，我们并没有给这个p标签设置高度，显然是内容将其撑高的。

垂直方向来看，文字在自己的行里是居中的。比如，文字是14px，行高是24px，那么padding就是5px：

为了严格保证字在行里面居中，我们的工程师有一个约定： 行高、字号，一般都是偶数。这样可以保证，它们的差一定偶数，就能够被2整除。
#
如何让单行文本垂直居中

小技巧：如果一段文本只有一行，如果此时设置行高 = 盒子高，就可以保证单行文本垂直居中。这个很好理解。

上面这个小技巧，只适用于单行文本垂直居中，不适用于多行。如果想让多行文本垂直居中，还需要计算盒子的padding。计算方式如下：
vertical-align: middle; 属性

vertical-align属性可用于指定行内元素（inline）、行内块元素（inline-block）、表格的单元格（table-cell）的垂直对齐方式。主要是用于图片、表格、文本的对齐。

代码举例：

vertical-align: middle; /*指定行级元素的垂直对齐方式。*/

MDN上的原话是 “vertical-align 用来指定行内元素（inline）或表格单元格（table-cell）元素的垂直对齐方式。” MDN上的这种描述是不完整的，漏掉了行内块元素（inline-block）。
行高可以用百分比，表示字号的百分之多少。

一般来说，百分比都是大于100%的，因为行高一定要大于字号。

比如说， font:12px/200% “宋体”等价于font:12px/24px “宋体”。200%可以理解成word里面的2倍行高。

反过来， font:16px/48px “宋体”;等价于font:16px/300% “宋体”。
#

文本属性

CSS样式中，常见的文本属性有以下几种：

    letter-spacing: 0.5cm ; 单个字母之间的间距
    word-spacing: 1cm; 单词之间的间距
    text-decoration: none; 字体修饰：none 去掉下划线、underline 下划线、line-through 中划线、overline 上划线
    text-transform: lowercase; 单词字体大小写。uppercase大写、lowercase小写
    color:red; 字体颜色
    text-align: center; 在当前容器中的对齐方式。属性值可以是：left、right、center（在当前容器的中间）、justify
    text-transform: lowercase; 单词的字体大小写。属性值可以是：uppercase（单词大写）、lowercase（单词小写）、capitalize（每个单词的首字母大写）


https://web.qianguyihao.com/



overflow属性：超出范围的内容要怎么处理

overflow属性的属性值可以是：

    visible：默认值。多余的内容不剪切也不添加滚动条，会全部显示出来。
    hidden：不显示超过对象尺寸的内容。
    auto：如果内容不超出，则不显示滚动条；如果内容超出，则显示滚动条。
    scroll：Windows 平台下，无论内容是否超出，总是显示滚动条。Mac 平台下，和 auto 属性相同。

针对上面的不同的属性值，我们来看一下效果： 举例：

<!doctype html>
<html lang="en">
 <head>
  <meta charset="UTF-8">
  <meta name="Generator" content="EditPlus®">
  <meta name="Author" content="">
  <meta name="Keywords" content="">
  <meta name="Description" content="">
  <title>Document</title>

	<style type="text/css">

		div{
			width: 100px;
			height: 100px;
			background-color: #00cc66;
			margin-right: 100px;
			float: left;
		}

		#div1{
			overflow: auto;/*超出的部分让浏览器自行解决*/
		}
		#div2{
			overflow: visible;/*超出的部分会显示出来*/
		}

		#div3{
			overflow: hidden;/*超出的部分将剪切掉*/
		}

	</style>

 </head>

 <body>

	<div id="div1">其实很简单 其实很自然 两个人的爱由两人分担 其实并不难 是你太悲观 隔着一道墙不跟谁分享 不想让你为难 你不再需要给我个答案</div>
	<div id="div2">其实很简单 其实很自然 两个人的爱由两人分担 其实并不难 是你太悲观 隔着一道墙不跟谁分享 不想让你为难 你不再需要给我个答案</div>
	<div id="div3">其实很简单 其实很自然 两个人的爱由两人分担 其实并不难 是你太悲观 隔着一道墙不跟谁分享 不想让你为难 你不再需要给我个答案</div>
 </body>

</html>






background 的常见背景属性

css2.1 中，常见的背景属性有以下几种：（经常用到，要记住）

    background-color:#ff99ff; 设置元素的背景颜色。

    background-image:url(images/2.gif); 将图像设置为背景。

    background-repeat: no-repeat; 设置背景图片是否重复及如何重复，默认平铺满。（重要）
        no-repeat不要平铺；
        repeat-x横向平铺；
        repeat-y纵向平铺。

    background-position:center top; 设置背景图片在当前容器中的位置。

    background-attachment:scroll; 设置背景图片是否跟着滚动条一起移动。 属性值可以是：scroll（与fixed属性相反，默认属性）、fixed（背景就会被固定住，不会被滚动条滚走）。

    另外还有一个综合属性叫做background，它的作用是：将上面的多个属性写在一个声明中。

CSS3 中，新增了一些background属性：

    background-origin

    background-clip 背景裁切

    background-size 调整尺寸

    多重背景

上面这几个属性经常用到，需要记住。现在我们逐个进行讲解。







CSS的单位

html中的单位只有一种，那就是像素px，所以单位是可以省略的，但是在CSS中不一样。 CSS中的单位是必须要写的，因为它没有默认单位。
#
绝对单位

1 in=2.54cm=25.4mm=72pt=6pc。

各种单位的含义：

    in：英寸Inches (1 英寸 = 2.54 厘米)
    cm：厘米Centimeters
    mm：毫米Millimeters
    pt：点Points，或者叫英镑 (1点 = 1/72英寸)
    pc：皮卡Picas (1 皮卡 = 12 点)

#
相对单位

px：像素 em：印刷单位相当于12个点 %：百分比，相对周围的文字的大小

为什么说像素px是一个相对单位呢，这也很好理解。比如说，电脑屏幕的的尺寸是不变的，但是我们可以让其显示不同的分辨率，在不同的分辨率下，单个像素的长度肯定是不一样的啦。
